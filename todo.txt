ToDo file for our pipeline project:

#All
- name!
- look for ensembl msa's (EPO) instead of multiz. They can be converted into each other, and ensembl msa seem to have better quality (see m. smith, australia) (LATER!)
- talk to Fabian for block clarification of EPO (LATER!)
- think about how to handle introns (see T. Lowe - search for paper from him or waiting for his email)
- add parameter as a maximal or minimal threshold for cluster sizes (genomic distance between anchors) - see talk T. Lowe
- some elements are not sorted into anchors (sbRNAs, distant related species)


#Anne
- tree parser based on the genome list
## done
- downloaded all multiZ alignmnents
- downloaded all newick trees of the remaining species of all MultiZ alignments
- created genlists as bed format for sbRNAs, Y RNAs, Alus, tRNAs
- determine the cutoffs of the CMs
- create 4 differenr YRNA CMs
- create CM's of alu repeats
- create sbRNAs CM


#Cameron
- include reading of zipped data (do not unzipped files as we get memory issues)
- delete bed files, temporary files (everything we don't need anymore)
- optimize reading of multiz alns (ask fabian externbrink)
- more detailed explanation for gene list input (README_cameron)
- gene lists: be able to include unique IDs for elements such that they can be found later in the graphs
- delete temp and bed folder?

#Sarah
- add checks if a column in the gene list input is NA
- add parameter such that only the element type in the genelist mode is used for orthology detection.
- solution for noncographs 
##more parameters?
- update help page/github page about new parameters
- give input parameters for alignment (possible for altNW?)
- parameter to set cluster length limits
##later to optimize and make nice
- test: with cm, with gene list, with seq and struc, with only sec/struc, ... 
- check all 'list' files such that only the real names of the clusters are printed, not all the paths.
- format help page
- do more statistics: in how many clusters is each species represented, percentages of elements in certain clusters/cographs/noncographs..., 
  length of clusters, (report cluster information when only looking at synteny!), average number of elements in clusters, average number of matches/mismatches etc, average alignment score. Averages per element? sort elements by type?
- parallelize checking of graphs? http://search.cpan.org/dist/Parallel-Iterator/lib/Parallel/Iterator.pm#Example
##done
- give option for user to switch off several parts of the pipeline (-a for cam's part, -x for not checking graphs for cographs, -z for not creating alignments thus not counting events)
- took out drawing of graphs with R
- summary files are created for each subprogram independantly and put into summaries folder
- help page is done in a subroutine named createHelp in main.pl


#General ideas and keywords:
- ePope usage: counting of events and ePoPE (run epope for each group of elements, summarize counts for to one resulting tree)
- think about distinguishing insertion events as: duplication, 'jumping' (where did it come from?) or completely new element 
